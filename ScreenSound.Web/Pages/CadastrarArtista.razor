@page "/CadastrarArtista"
@using ScreenSound.Web.Requests
@inject ArtistaAPI artistaAPI
@inject NavigationManager navigationManager
<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Cadastro do Artista</MudText>

    <MudForm>

        <MudTextField Class="mt-4" T="string" Placeholder="Nome do Artista"
                      Variant="Variant.Outlined"
                      @bind-Value="nome"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <MudTextField Class="mt-4" T="string" Placeholder="Biografia do artista"
                      Variant="Variant.Outlined"
                      @bind-Value="biografia"
                      Lines="4"
                      Required="true"
                      RequiredError="Campo obrigatório." />      

        <MudImage Class="mt-4" src="@fileImage" />
        <MudFileUpload T="IBrowserFile" Accept=".jpeg" FilesChanged="UploadFile">
            <ActivatorContent>
                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.PhotoCamera">
                    Foto de Perfil
                </MudButton>
            </ActivatorContent>
        </MudFileUpload>

        <div class="d-flex align-center justify-end mt-4">
            <MudButton Variant="Variant.Filled"
                       @onclick="Voltar"
                       Color="Color.Primary"
                       Class="mr-2">
                Voltar
            </MudButton>
            <MudButton Variant="Variant.Filled"
                       @onclick="Cadastrar"
                       Color="Color.Primary">
                Cadastrar
            </MudButton>
        </div>


    </MudForm>
</MudPaper>

@code {
    private string? nome;
    private string? biografia;
    private string? fileImage;
    private string? fotoPerfil;
    private async Task Cadastrar()
    {
        var request = new ArtistaRequest(nome!, biografia!, fotoPerfil);
        await artistaAPI.AddArtistaAsync(request);
        navigationManager.NavigateTo("/Artistas");
    }

    private void Voltar()
    {
         navigationManager.NavigateTo("/Artistas");
    }

    private async Task UploadFile(IBrowserFile file)
    {
        long maxFileSize = 1024 * 1024 * 15;

        var format = "image/jpeg";

        var resizedImage = await file.RequestImageFileAsync(format, 200, 200);

        using var fileStream = resizedImage.OpenReadStream();
        using var memoryStream = new MemoryStream();
        await fileStream.CopyToAsync(memoryStream);

        fileImage = $"date:{format};base64,{Convert.ToBase64String(memoryStream.ToArray())}";
    }
}